package io.trewartha.positional.core.ui

import androidx.compose.material3.ColorScheme
import androidx.compose.ui.graphics.Color

public val md_theme_light_primary: Color = Color(0xFF005AC1)
public val md_theme_light_onPrimary: Color = Color(0xFFFFFFFF)
public val md_theme_light_primaryContainer: Color = Color(0xFFD8E2FF)
public val md_theme_light_onPrimaryContainer: Color = Color(0xFF001A41)
public val md_theme_light_secondary: Color = Color(0xFF535E78)
public val md_theme_light_onSecondary: Color = Color(0xFFFFFFFF)
public val md_theme_light_secondaryContainer: Color = Color(0xFFD8E2FF)
public val md_theme_light_onSecondaryContainer: Color = Color(0xFF0F1B32)
public val md_theme_light_tertiary: Color = Color(0xFF76517B)
public val md_theme_light_onTertiary: Color = Color(0xFFFFFFFF)
public val md_theme_light_tertiaryContainer: Color = Color(0xFFFED6FF)
public val md_theme_light_onTertiaryContainer: Color = Color(0xFF2D0E34)
public val md_theme_light_error: Color = Color(0xFFBA1A1A)
public val md_theme_light_onError: Color = Color(0xFFFFFFFF)
public val md_theme_light_errorContainer: Color = Color(0xFFFFDAD6)
public val md_theme_light_onErrorContainer: Color = Color(0xFF410002)
public val md_theme_light_background: Color = Color(0xFFFEFBFF)
public val md_theme_light_onBackground: Color = Color(0xFF1B1B1F)
public val md_theme_light_surface: Color = Color(0xFFFEFBFF)
public val md_theme_light_onSurface: Color = Color(0xFF1B1B1F)
public val md_theme_light_surfaceVariant: Color = Color(0xFFE1E2EC)
public val md_theme_light_onSurfaceVariant: Color = Color(0xFF44474F)
public val md_theme_light_outline: Color = Color(0xFF74777F)
public val md_theme_light_outlineVariant: Color = md_theme_light_outline
public val md_theme_light_shadow: Color = Color(0xFF000000)
public val md_theme_light_inverseSurface: Color = Color(0xFF303033)
public val md_theme_light_inverseOnSurface: Color = Color(0xFFF2F0F4)
public val md_theme_light_inversePrimary: Color = Color(0xFFADC6FF)
public val md_theme_light_scrim: Color = Color(0xFF000000)
public val md_theme_light_surfaceTint: Color = Color(0xFF005AC1)
public val md_theme_light_surfaceTintColor: Color = Color(0xFF005AC1)

public val md_theme_light_sunrise: Color = Color(0xFFBBDEFB)
public val md_theme_light_sunset: Color = Color(0xFFFFDBA6)

public val md_theme_dark_primary: Color = Color(0xFFADC6FF)
public val md_theme_dark_onPrimary: Color = Color(0xFF002E69)
public val md_theme_dark_primaryContainer: Color = Color(0xFF004494)
public val md_theme_dark_onPrimaryContainer: Color = Color(0xFFD8E2FF)
public val md_theme_dark_secondary: Color = Color(0xFFBBC6E4)
public val md_theme_dark_onSecondary: Color = Color(0xFF253048)
public val md_theme_dark_secondaryContainer: Color = Color(0xFF3B475F)
public val md_theme_dark_onSecondaryContainer: Color = Color(0xFFD8E2FF)
public val md_theme_dark_tertiary: Color = Color(0xFFE5B8E8)
public val md_theme_dark_onTertiary: Color = Color(0xFF44244A)
public val md_theme_dark_tertiaryContainer: Color = Color(0xFF5D3A62)
public val md_theme_dark_onTertiaryContainer: Color = Color(0xFFFED6FF)
public val md_theme_dark_error: Color = Color(0xFFFFB4AB)
public val md_theme_dark_onError: Color = Color(0xFF690005)
public val md_theme_dark_errorContainer: Color = Color(0xFF93000A)
public val md_theme_dark_onErrorContainer: Color = Color(0xFFFFB4AB)
public val md_theme_dark_background: Color = Color(0xFF1B1B1F)
public val md_theme_dark_onBackground: Color = Color(0xFFE3E2E6)
public val md_theme_dark_surface: Color = Color(0xFF1B1B1F)
public val md_theme_dark_onSurface: Color = Color(0xFFE3E2E6)
public val md_theme_dark_surfaceVariant: Color = Color(0xFF44474F)
public val md_theme_dark_onSurfaceVariant: Color = Color(0xFFC4C6D0)
public val md_theme_dark_outline: Color = Color(0xFF8E9099)
public val md_theme_dark_outlineVariant: Color = md_theme_dark_outline
public val md_theme_dark_shadow: Color = Color(0xFF000000)
public val md_theme_dark_inverseSurface: Color = Color(0xFFE3E2E6)
public val md_theme_dark_inverseOnSurface: Color = Color(0xFF303033)
public val md_theme_dark_inversePrimary: Color = Color(0xFF005AC1)
public val md_theme_dark_scrim: Color = Color(0xFF000000)
public val md_theme_dark_surfaceTint: Color = Color(0xFFADC6FF)
public val md_theme_dark_surfaceTintColor: Color = Color(0xFFADC6FF)

public val md_theme_dark_sunrise: Color = Color(0x4DBBDEFB)
public val md_theme_dark_sunset: Color = Color(0x4DFFDBA6)

public val seed: Color = Color(0xFF4285F4)

public val lightColorScheme: ColorScheme = ColorScheme(
    primary = md_theme_light_primary,
    onPrimary = md_theme_light_onPrimary,
    primaryContainer = md_theme_light_primaryContainer,
    onPrimaryContainer = md_theme_light_onPrimaryContainer,
    inversePrimary = md_theme_light_inversePrimary,
    secondary = md_theme_light_secondary,
    onSecondary = md_theme_light_onSecondary,
    secondaryContainer = md_theme_light_secondaryContainer,
    onSecondaryContainer = md_theme_light_onSecondaryContainer,
    tertiary = md_theme_light_tertiary,
    onTertiary = md_theme_light_onTertiary,
    tertiaryContainer = md_theme_light_tertiaryContainer,
    onTertiaryContainer = md_theme_light_onTertiaryContainer,
    background = md_theme_light_background,
    onBackground = md_theme_light_onBackground,
    surface = md_theme_light_surface,
    onSurface = md_theme_light_onSurface,
    surfaceVariant = md_theme_light_surfaceVariant,
    onSurfaceVariant = md_theme_light_onSurfaceVariant,
    surfaceTint = md_theme_light_surfaceTint,
    inverseSurface = md_theme_light_inverseSurface,
    inverseOnSurface = md_theme_light_inverseOnSurface,
    error = md_theme_light_error,
    onError = md_theme_light_onError,
    errorContainer = md_theme_light_errorContainer,
    onErrorContainer = md_theme_light_onErrorContainer,
    outline = md_theme_light_outline,
    outlineVariant = md_theme_light_outlineVariant,
    scrim = md_theme_light_scrim
)

public val darkColorScheme: ColorScheme = ColorScheme(
    primary = md_theme_dark_primary,
    onPrimary = md_theme_dark_onPrimary,
    primaryContainer = md_theme_dark_primaryContainer,
    onPrimaryContainer = md_theme_dark_onPrimaryContainer,
    inversePrimary = md_theme_dark_inversePrimary,
    secondary = md_theme_dark_secondary,
    onSecondary = md_theme_dark_onSecondary,
    secondaryContainer = md_theme_dark_secondaryContainer,
    onSecondaryContainer = md_theme_dark_onSecondaryContainer,
    tertiary = md_theme_dark_tertiary,
    onTertiary = md_theme_dark_onTertiary,
    tertiaryContainer = md_theme_dark_tertiaryContainer,
    onTertiaryContainer = md_theme_dark_onTertiaryContainer,
    background = md_theme_dark_background,
    onBackground = md_theme_dark_onBackground,
    surface = md_theme_dark_surface,
    onSurface = md_theme_dark_onSurface,
    surfaceVariant = md_theme_dark_surfaceVariant,
    onSurfaceVariant = md_theme_dark_onSurfaceVariant,
    surfaceTint = md_theme_dark_surfaceTint,
    inverseSurface = md_theme_dark_inverseSurface,
    inverseOnSurface = md_theme_dark_inverseOnSurface,
    error = md_theme_dark_error,
    onError = md_theme_dark_onError,
    errorContainer = md_theme_dark_errorContainer,
    onErrorContainer = md_theme_dark_onErrorContainer,
    outline = md_theme_dark_outline,
    outlineVariant = md_theme_dark_outlineVariant,
    scrim = md_theme_dark_scrim,
)
